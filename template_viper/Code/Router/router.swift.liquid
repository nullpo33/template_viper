//
//  {{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright Â© {{ year }} {{ developer.company }}. All rights reserved.
//

import UIKit

protocol {{ module_info.name }}RouterProtocol: AnyObject {

}

final class {{ module_info.name }}Router {

    private unowned let viewController: UIViewController

    private init(viewController: UIViewController) {
        self.viewController = viewController
    }

    static func assembleModules() -> UIViewController {
        let storyboard = UIStoryboard(name: "{{ module_info.name }}ViewController", bundle: nil)
        guard let view = storyboard.instantiateViewController(withIdentifier: "{{ module_info.name }}") as? {{ module_info.name }}ViewController else { return {{ module_info.name }}ViewController() }
        let nav = UINavigationController(rootViewController: view)

        let router = {{ module_info.name }}Router(viewController: nav)
        let interactor = {{ module_info.name }}Interactor()
        let presenter = {{ module_info.name }}Presenter(view: view, router: router, interactor: interactor)

        interactor.output = presenter
        view.presenter = presenter

        return nav
    }
}

extension {{ module_info.name }}Router: {{ module_info.name }}RouterProtocol {
    
}